/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    pages: Page;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    'quem-somos': QuemSomo;
    homepage: Homepage;
    contactos: Contacto;
    inscricoes: Inscricoe;
    'main-menu': MainMenu;
    'forest-school': ForestSchool;
    atividades: Atividade;
  };
  globalsSelect: {
    'quem-somos': QuemSomosSelect<false> | QuemSomosSelect<true>;
    homepage: HomepageSelect<false> | HomepageSelect<true>;
    contactos: ContactosSelect<false> | ContactosSelect<true>;
    inscricoes: InscricoesSelect<false> | InscricoesSelect<true>;
    'main-menu': MainMenuSelect<false> | MainMenuSelect<true>;
    'forest-school': ForestSchoolSelect<false> | ForestSchoolSelect<true>;
    atividades: AtividadesSelect<false> | AtividadesSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  slug?: string | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  content?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "quem-somos".
 */
export interface QuemSomo {
  id: number;
  hero: {
    title: string;
    description: string;
    image: number | Media;
  };
  oSopeSection: {
    title: string;
    text: string;
  };
  principiosSection: {
    title: string;
    content?:
      | {
          type: 'text' | 'image';
          text?: string | null;
          image?: (number | null) | Media;
          imagePosition?: ('left' | 'right' | 'center') | null;
          id?: string | null;
        }[]
      | null;
  };
  pretendemoSection: {
    title: string;
    layout?: ('text-left' | 'image-left') | null;
    bulletPoints?:
      | {
          text: string;
          id?: string | null;
        }[]
      | null;
    image?: (number | null) | Media;
  };
  equipaSection: {
    title: string;
    teamMembers?:
      | {
          name: string;
          title: string;
          description: string;
          image: number | Media;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage".
 */
export interface Homepage {
  id: number;
  hero: {
    title: string;
    subtitle?: string | null;
    button: {
      text: string;
      link: string;
    };
    image: number | Media;
  };
  ctaBanner: {
    title: string;
    text: string;
    buttons?:
      | {
          text: string;
          link: string;
          style: 'fill' | 'outline';
          id?: string | null;
        }[]
      | null;
  };
  activitiesSection: {
    title: string;
    text: string;
    /**
     * Upload a single image that contains 4 activities arranged in a 2x2 grid
     */
    image: number | Media;
    button: {
      text: string;
      link: string;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contactos".
 */
export interface Contacto {
  id: number;
  hero: {
    title: string;
    description?: string | null;
    image: number | Media;
  };
  mapSection: {
    title: string;
    description?: string | null;
    /**
     * Paste the full iframe src URL from Google Maps embed
     */
    mapEmbedUrl: string;
  };
  contactInfo: {
    sectionTitle: string;
    phone: string;
    /**
     * Phone number without spaces or + for WhatsApp link
     */
    whatsappNumber: string;
    whatsappText: string;
    email: string;
    address: {
      street: string;
      postalCode: string;
      /**
       * Additional details about how to find the location
       */
      description?: string | null;
    };
    socialMedia?: {
      title?: string | null;
      instagram?: string | null;
      facebook?: string | null;
    };
  };
  contactForm: {
    title: string;
    description?: string | null;
    submitButtonText: string;
  };
  openingHours: {
    title: string;
    schedule?:
      | {
          day: string;
          hours: string;
          notes?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inscricoes".
 */
export interface Inscricoe {
  id: number;
  hero: {
    title: string;
    description?: string | null;
    image: number | Media;
  };
  programs?:
    | {
        title: string;
        description: string;
        /**
         * e.g., "Os playgroups para bebés destinam-se a crianças entre os 6 meses e os 3 anos de idade."
         */
        ageRange?: string | null;
        image: number | Media;
        imagePosition: 'left' | 'right';
        backgroundColor: 'pink' | 'gray' | 'blue' | 'green' | 'white';
        buttons: {
          inscricaoButton: {
            text: string;
            link: string;
          };
          informacoesButton: {
            text: string;
            link: string;
          };
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "main-menu".
 */
export interface MainMenu {
  id: number;
  navItems?:
    | {
        label: string;
        link: string;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forest-school".
 */
export interface ForestSchool {
  id: number;
  hero: {
    title: string;
    description: string;
    image: number | Media;
  };
  bannerSection: {
    title: string;
    text: string;
  };
  contentBlocks?:
    | {
        title: string;
        /**
         * Optional introductory text before the subsections
         */
        text?: string | null;
        subsections?:
          | {
              /**
               * Bold subtitle (e.g., "Sessões regulares na natureza")
               */
              subtitle: string;
              items?:
                | {
                    text: string;
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "atividades".
 */
export interface Atividade {
  id: number;
  hero: {
    title: string;
    description?: string | null;
    image: number | Media;
  };
  activityImages?: {
    section1Images?: {
      image1?: (number | null) | Media;
      image2?: (number | null) | Media;
      image3?: (number | null) | Media;
    };
    section2Images?: {
      image1?: (number | null) | Media;
      image2?: (number | null) | Media;
      image3?: (number | null) | Media;
    };
    section3Images?: {
      image1?: (number | null) | Media;
      image2?: (number | null) | Media;
      image3?: (number | null) | Media;
    };
  };
  ctaBanner?: {
    title?: string | null;
    text?: string | null;
    buttons?:
      | {
          text?: string | null;
          link?: string | null;
          style?: ('fill' | 'outline') | null;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "quem-somos_select".
 */
export interface QuemSomosSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  oSopeSection?:
    | T
    | {
        title?: T;
        text?: T;
      };
  principiosSection?:
    | T
    | {
        title?: T;
        content?:
          | T
          | {
              type?: T;
              text?: T;
              image?: T;
              imagePosition?: T;
              id?: T;
            };
      };
  pretendemoSection?:
    | T
    | {
        title?: T;
        layout?: T;
        bulletPoints?:
          | T
          | {
              text?: T;
              id?: T;
            };
        image?: T;
      };
  equipaSection?:
    | T
    | {
        title?: T;
        teamMembers?:
          | T
          | {
              name?: T;
              title?: T;
              description?: T;
              image?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage_select".
 */
export interface HomepageSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        subtitle?: T;
        button?:
          | T
          | {
              text?: T;
              link?: T;
            };
        image?: T;
      };
  ctaBanner?:
    | T
    | {
        title?: T;
        text?: T;
        buttons?:
          | T
          | {
              text?: T;
              link?: T;
              style?: T;
              id?: T;
            };
      };
  activitiesSection?:
    | T
    | {
        title?: T;
        text?: T;
        image?: T;
        button?:
          | T
          | {
              text?: T;
              link?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contactos_select".
 */
export interface ContactosSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  mapSection?:
    | T
    | {
        title?: T;
        description?: T;
        mapEmbedUrl?: T;
      };
  contactInfo?:
    | T
    | {
        sectionTitle?: T;
        phone?: T;
        whatsappNumber?: T;
        whatsappText?: T;
        email?: T;
        address?:
          | T
          | {
              street?: T;
              postalCode?: T;
              description?: T;
            };
        socialMedia?:
          | T
          | {
              title?: T;
              instagram?: T;
              facebook?: T;
            };
      };
  contactForm?:
    | T
    | {
        title?: T;
        description?: T;
        submitButtonText?: T;
      };
  openingHours?:
    | T
    | {
        title?: T;
        schedule?:
          | T
          | {
              day?: T;
              hours?: T;
              notes?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inscricoes_select".
 */
export interface InscricoesSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  programs?:
    | T
    | {
        title?: T;
        description?: T;
        ageRange?: T;
        image?: T;
        imagePosition?: T;
        backgroundColor?: T;
        buttons?:
          | T
          | {
              inscricaoButton?:
                | T
                | {
                    text?: T;
                    link?: T;
                  };
              informacoesButton?:
                | T
                | {
                    text?: T;
                    link?: T;
                  };
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "main-menu_select".
 */
export interface MainMenuSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        label?: T;
        link?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forest-school_select".
 */
export interface ForestSchoolSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  bannerSection?:
    | T
    | {
        title?: T;
        text?: T;
      };
  contentBlocks?:
    | T
    | {
        title?: T;
        text?: T;
        subsections?:
          | T
          | {
              subtitle?: T;
              items?:
                | T
                | {
                    text?: T;
                    id?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "atividades_select".
 */
export interface AtividadesSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  activityImages?:
    | T
    | {
        section1Images?:
          | T
          | {
              image1?: T;
              image2?: T;
              image3?: T;
            };
        section2Images?:
          | T
          | {
              image1?: T;
              image2?: T;
              image3?: T;
            };
        section3Images?:
          | T
          | {
              image1?: T;
              image2?: T;
              image3?: T;
            };
      };
  ctaBanner?:
    | T
    | {
        title?: T;
        text?: T;
        buttons?:
          | T
          | {
              text?: T;
              link?: T;
              style?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}